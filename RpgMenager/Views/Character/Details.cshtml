@using RpgMenager.Application.DtosAndFactories.Index
@using RpgMenager.Application.DtosAndFactories.Statistic
@using RpgMenager.Application.DtosAndFactories.Statistic.Commands.Create
@using RpgMenager.Mvc.Models
@model RpgMenager.Application.DtosAndFactories.Character.CharacterDto

@{
    ViewData["Title"] = "Details";
    string x = "dsds";
}

<h1>Details</h1>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ })
    <button class="btn btn-secondary" onclick="window.history.back();">Powrót</button>
    <partial name="_CreateStatistic" model="new CreateStatisticCommand() { ListId = Model.Id , NameOfTheList=x}" />
</div>
<div>
    <h4>CharacterDto</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Hp)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Hp)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Lastname)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Lastname)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TypeOfCharacter)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TypeOfCharacter)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PlayerId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PlayerId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.AttitudeToAnotherCharacter)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.AttitudeToAnotherCharacter)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.EncodedName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.EncodedName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PathToImage)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PathToImage)
        </dd>
    </dl>
</div>
<div>
    @{
        foreach(var index in Model.IndexOfStatistic)
        {
            var IndexModel = index.MainList;
           // Html.RenderPartial("~/Views/Statistic/Details.cshtml", IndexModel);
        }
    }
</div>

<div id="statistics-container" class="row"
     
     data-id-name="@Model.Id"></div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="~/js/Statistic/Create.js"></script> @*To powoduje czerone pole *@
}

